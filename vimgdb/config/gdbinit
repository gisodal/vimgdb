# vim: set filetype=python

# allocate gdb convenience variables
python
variables = [ "$_vimgdb_option", "$_vimgdb_src", "$_vimgdb_breakpoints" ]
for variable in variables:
    gdb.execute("set {0} = \"{1}\"".format(variable,"\\0"*256))
end

# vimgdb interface
define _vimgdb
if $argc >= 1
    set $_vimgdb_option = "$arg0"
else
    set $_vimgdb_option = ""
end

python

try:
    import sys
    import os

    sys.path.append(os.getcwd())
    from vimgdb import Vimgdb

    vimgdb = Vimgdb()
    option = vimgdb.gdb.GetValue(vimgdb.gdb.option)
    if option == "disable":
        vimgdb.Disable()
    else:
        force_update = False;
        if option == "force":
            force_update = True
        ret = vimgdb.Update(force=force_update)
        #if ret != 0:
        #    print("Vimgdb update failed")

except ImportError:
    print("** vimgdb not found **")
    print("Python {0}.{1}.{2} could not find vimgdb in:".format(
            sys.version_info.major,
            sys.version_info.minor,
            sys.version_info.micro))
    for directory in sys.path:
        print("    {0}".format(directory))

    sys.exit(1)
except Exception as error:
    import traceback
    print("Vimgdb Exception: {0}".format(str(error)))
    print(traceback.format_exc())

end
end

define sync
    _vimgdb force
end

# gdb hooks
define hook-quit
    _vimgdb disable
end

define hookpost-break
    _vimgdb
end

define hookpost-tbreak
    _vimgdb
end

define hookpost-disable
    _vimgdb
end

define hookpost-enable
    _vimgdb
end

define hookpost-clear
    _vimgdb
end

define hook-stop
    _vimgdb
end

define hookpost-up
    _vimgdb
end

define hookpost-down
    _vimgdb
end

